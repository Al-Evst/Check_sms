import os


from weather_sdk import get_new_event, SMSServer

from dotenv import load_dotenv
load_dotenv()

token_fr = os.getenv('FORECAST_TOKEN')
town_title = 'Курск'

token_sms = os.getenv('SMS_TOKEN')
server = SMSServer(token_sms)

new_event = get_new_event(token_fr, town_title)
event_date = new_event.get_date()
event_time = new_event.get_time()
event_area = new_event.get_area()
phenomenon_description = new_event.get_phenomenon()

sms_template = '''{town_title}: {event_time} {event_date} {event_area} ожидается {phenomenon_description}. Будьте внимательны и осторожны.'''


sms_message = sms_template.format(
    town_title=town_title,
    event_time=event_time,
    event_date=event_date,
    event_area=event_area,
    phenomenon_description=phenomenon_description,
)

server.send(sms_message)




# Гипотеза 1: В переменной нет прогноза погоды для Курска
# Способ проверки: Выведу переменную new_event
# Код для проверки: print(new_event)
# Установленный факт: Результат выводится не корректно: "Регион:  Погода: " 
# Вывод: Гипотеза подтверждена. В переменной нет прогноза погоды

# Гипотеза 2.1: town_title на самом деле пуста
# Способ проверки: Выведу переменную town_title
# Код для проверки: print(town_title)
# Установленный факт: Результат проверки выводится корректно
# Вывод: Гипотеза не подтверждена. Переменная town_tittle не пуста

# Гипотеза 2.2: В town_title не название города
# Способ проверки: Выведу переменную town_title
# Код для проверки: print(town_title)
# Установленный факт: Результат проверки выводится корректно
# Вывод: Гипотеза не подтверждена. В переменной есть название города: 'Курск'

# Гипотеза 3: Переменна token на самом деле пуста
# Способ проверки: Выведу переменную token
# Код для проверки: print(token)
# Установленный факт: Результат выводится корректно: 'None'
# Вывод: Гипотеза подтверждена. Переменная token пуста

# Гипотеза 4.1: Может, `token` всё ещё пуст?
# Способ проверки: Выведу переменную token
# Код для проверки: print(token)
# Установленный факт: Результат выводит значение: aGVsbG8gY3J5cHRvIGVudHVzaWFzdCA7KQ==
# Вывод: Гипотеза не подтверждена. Переменная token не пустая

# Гипотеза 4.2: Может, в токене не то значение, не `85b98d96709fd49a69ba8165676e4592`?
# Способ проверки: Сравнить значение token 
# Код для проверки: print(token=='85b98d96709fd49a69ba8165676e4592')
# Установленный факт: Вывод значения : False
# Вывод: Гипотеза подтвердилась. Токен не содержит определенную строку:`85b98d96709fd49a69ba8165676e4592`

# Гипотеза 4.3: Может, значение `85b98d96709fd49a69ba8165676e4592` успевает измениться до строчки `new_event = ...`?
# Способ проверки: Вывести token до строчки 'new_event =' : 1) print(token) после Forecast_token; 2) print(token) после SMS_TOKEN
# Код для проверки: print(token)
# Установленный факт: Выводится значение token: 1) '85b98d96709fd49a69ba8165676e4592'; 2) 'aGVsbG8gY3J5cHRvIGVudHVzaWFzdCA7KQ=='
# Вывод: Гипотеза подтвердилась. Значение токена меняется при проверке

# Гипотеза 5.1: Переменная `event_time` пуста/в ней не время
# Способ проверки: Вывести переменную event_time
# Код для проверки: print(event_time)
# Установленный факт: Переменная event_time содержит не пустое значение
# Вывод: Гипотеза не подтверждена. В ней содержится 'в дневное время'

# Гипотеза 5.2: Переменная `event_date` пуста/в ней не дата
# Способ проверки: Вывести переменную event_time 
# Код для проверки: print(event_date)
# Установленный факт: Переменная event_date содержит дату
# Вывод: Гипотеза не подтверждена. В переменной содержится дата

# Гипотеза 5.3: Переменная 'event_area' пуста/в ней не место
# Способ проверки: Вывести переменную event_area
# Код для проверки: print(event_area)
# Установленный факт: Переменная event_area содержит населенный пункт
# Вывод: Гипотеза не подтверждена. В переменной содержится населенный пункт

# Гипотеза 5.4: Переменная 'phenomenon_description' пуста/в ней не описание погодного явления
# Способ проверки: Вывести перенную phenomenon_description
# Код для проверки: print(phenomenon_description)
# Установленный факт: Переменная phenomenon_description содержит информацию о погоде
# Вывод: Гипотеза не подтверждена. Переменная phenomenon_description содержит информацию о погоде

# Гипотеза 6: Возможно, в шаблоне используются какие-то переменные, которые не передаются в .format()
# Способ проверки: Вывести элементы шаблона на экран
# Код для проверки: print(sms_template)
# Установленный факт: В шаблоне переменной Sms_template нет ошибок
# Вывод: Гипотеза не подтверждена. В шаблоне не обнаружено ошибок

# Гипотеза 7: Проверьте, что .format() поддерживает такое форматирование
# Способ проверки: Метод Python String format()
# Код для проверки: ...{'...'}.format('...')
# Установленный факт: Метод format() поддерживает такое форматирование
# Вывод: Гипотеза подтверждена. Метод format() поддерживает такое форматирование

# Гипотеза 8: Проверка совместимости шаблона со значениями в format()
# Способ проверки: Совместить аргументы шаблона
# Код для проверки: sms_message = sms_template.format(town_title=town_title)
# Установленный факт: Проверка совместимости показала положительный результат
# Вывод: Гипотеза подтверждена. Программа работает корректно


